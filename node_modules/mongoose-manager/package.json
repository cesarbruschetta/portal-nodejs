{
  "author": {
    "name": "Madhusudhan Srinivasa",
    "email": "madhums8@gmail.com",
    "url": "http://twitter.com/madhums"
  },
  "name": "mongoose-manager",
  "description": "Admin for mongoose",
  "version": "0.0.0",
  "repository": {
    "url": "git://github.com/madhums/mongoose-manager.git"
  },
  "main": "index",
  "scripts": {
    "test": "make test"
  },
  "dependencies": {
    "express": "2.5.9",
    "express-namespace": "0.1.0"
  },
  "devDependencies": {
    "mocha": "1.0.3",
    "should": "0.6.3"
  },
  "optionalDependencies": {},
  "engines": {
    "node": ">= 0.6.15"
  },
  "readme": "## Mongoose manager\nAn admin for projects using mongoose ODM\n\n**Note**: Still in development, don't use it\n\n## Todo\n* Everything!\n* Provide options for boolean fields\n* add authorization\n\n## Prerequisite\nYou need to have these modules installed in order to use mongoose manager\n* mongoose\n* express\n* jade\n\n## Install\n```sh\n$ npm install mongoose-manager\n```\n\nor in your `package.json`\n```js\n{\n  // Prerequisite\n  \"mongoose\": \"latest\",\n  \"express\": \"latest\",\n  \"jade\": \"latest\",\n\n  \"mongoose-manager\": \"latest\"\n}\n```\n\n## Usage\nWhen you are defining the schema, provide options\n\nList of options\n```js\n{admin: {type: 'string'}} // for a text field\n{admin: {type: 'text'}} // for a textarea field\n\n// referencing\n{admin: {referenced: 'name'}} // which object you are referencing\n{admin: {referenced: true}} // the referenced object\n```\n\nExample:\n```js\nvar ItemSchema = new Schema({\n    name: { type: String, admin: {type: 'string'} }\n  , description: { type: String, admin: {type: 'text'} }\n  , user: {type: Schema.ObjectId, ref: 'User', admin: {referenced: 'name'}}\n})\nmongoose.model('Item', ItemSchema)\n\nvar UserSchema = new Schema({\n    name: {type: String, admin: {referenced: true, type: 'string'}}\n  , bio: {type: String, admin: {type: 'text'}}\n})\nmongoose.model('User', UserSchema)\n```\n\nPass the mongoose and express app objects to the mongoose manager after the mongoose\nmodels are defined and the connection to mongodb has been established\n\n```js\nvar manager = require('mongoose-manager')\nmanager.start(mongoose, app)\n```\nThen visit `localhost:<port>/admin` to see the list of collections and manage the\ndocuments\n",
  "readmeFilename": "README.md",
  "_id": "mongoose-manager@0.0.0",
  "dist": {
    "shasum": "7d37002875579ce8857865dce25a350cda15de4e"
  },
  "_from": "mongoose-manager"
}
